syntax = "proto3";
package cores;

option go_package = "github.com/snple/beacon/pb/cores;cores";

import "source_message.proto";
import "generic_message.proto";

// source
message SourceListRequest {
    pb.Page page = 1;
    string node_id = 2;
    string tags = 3;
    string source = 4;
}

message SourceListResponse {
    pb.Page page = 1;
    uint32 count = 2;
    repeated pb.Source source = 3;
}

message SourceNameRequest {
    string node_id = 1;
    string name = 2;
}

message SourceLinkRequest {
    string id = 1;
    sint32 status = 2;
}

message SourceCloneRequest {
    string id = 1;
    string node_id = 2;
}

message SourcePullRequest {
    int64 after = 1;
    uint32 limit = 2;
    string node_id = 3;
    string source = 4;
}

message SourcePullResponse {
    int64 after = 1;
    uint32 limit = 2;
    repeated pb.Source source = 3;
}

service SourceService {
    rpc Create(pb.Source) returns (pb.Source) {}
    rpc Update(pb.Source) returns (pb.Source) {}
    rpc View(pb.Id) returns (pb.Source) {}
    rpc Name(SourceNameRequest) returns (pb.Source) {}
    rpc NameFull(pb.Name) returns (pb.Source) {}
    rpc Delete(pb.Id) returns (pb.MyBool) {}
    rpc List(SourceListRequest) returns (SourceListResponse) {}
    rpc Link(SourceLinkRequest) returns (pb.MyBool) {}
    rpc Clone(SourceCloneRequest) returns (pb.MyBool) {}
    rpc ViewWithDeleted(pb.Id) returns (pb.Source) {}
    rpc Pull(SourcePullRequest) returns (SourcePullResponse) {}
    rpc Sync(pb.Source) returns (pb.MyBool) {}
}

// tag
message TagListRequest {
    pb.Page page = 1;
    string node_id = 2;
    string source_id = 3;
    string tags = 4;
}

message TagListResponse {
    pb.Page page = 1;
    uint32 count = 2;
    repeated pb.Tag tag = 3;
}

message TagNameRequest {
    string node_id = 1;
    string name = 2;
}

message TagCloneRequest {
    string id = 1;
    string source_id = 2;
}

message TagGetValueByNameRequest {
    string node_id = 1;
    string name = 2;
}

message TagNameValue {
    string node_id = 1;
    string id = 2;
    string name = 3;
    string value = 4;
    int64 updated = 5;
}

message TagPullRequest {
    int64 after = 1;
    uint32 limit = 2;
    string node_id = 3;
    string source_id = 4;
}

message TagPullResponse {
    int64 after = 1;
    uint32 limit = 2;
    repeated pb.Tag tag = 3;
}

message TagPullValueRequest {
    int64 after = 1;
    uint32 limit = 2;
    string node_id = 3;
    string source_id = 4;
}

message TagPullValueResponse {
    int64 after = 1;
    uint32 limit = 2;
    repeated pb.TagValueUpdated tag = 3;
}

service TagService {
    rpc Create(pb.Tag) returns (pb.Tag) {}
    rpc Update(pb.Tag) returns (pb.Tag) {}
    rpc View(pb.Id) returns (pb.Tag) {}
    rpc Name(TagNameRequest) returns (pb.Tag) {}
    rpc NameFull(pb.Name) returns (pb.Tag) {}
    rpc Delete(pb.Id) returns (pb.MyBool) {}
    rpc List(TagListRequest) returns (TagListResponse) {}
    rpc Clone(TagCloneRequest) returns (pb.MyBool) {}
    rpc ViewWithDeleted(pb.Id) returns (pb.Tag) {}
    rpc Pull(TagPullRequest) returns (TagPullResponse) {}
    rpc Sync(pb.Tag) returns (pb.MyBool) {}

    rpc GetValue(pb.Id) returns (pb.TagValue) {}
    rpc SetValue(pb.TagValue) returns (pb.MyBool) {}
    rpc GetValueByName(TagGetValueByNameRequest) returns (TagNameValue) {}
    rpc SetValueByName(TagNameValue) returns (pb.MyBool) {}
    rpc ViewValue(pb.Id) returns (pb.TagValueUpdated) {}
    rpc DeleteValue(pb.Id) returns (pb.MyBool) {}
    rpc PullValue(TagPullValueRequest) returns (TagPullValueResponse) {}
    rpc SyncValue(pb.TagValue) returns (pb.MyBool) {}

    rpc GetWrite(pb.Id) returns (pb.TagValue) {}
    rpc SetWrite(pb.TagValue) returns (pb.MyBool) {}
    rpc GetWriteByName(TagGetValueByNameRequest) returns (TagNameValue) {}
    rpc SetWriteByName(TagNameValue) returns (pb.MyBool) {}
    rpc ViewWrite(pb.Id) returns (pb.TagValueUpdated) {}
    rpc DeleteWrite(pb.Id) returns (pb.MyBool) {}
    rpc PullWrite(TagPullValueRequest) returns (TagPullValueResponse) {}
    rpc SyncWrite(pb.TagValue) returns (pb.MyBool) {}
}
