syntax = "proto3";
package cores;

option go_package = "github.com/snple/beacon/pb/cores;cores";

import "source_message.proto";
import "generic_message.proto";

// source
message SourceListRequest {
    pb.Page page = 1;
    string node_id = 2;
    string tags = 3;
    string source = 4;
}

message SourceListResponse {
    pb.Page page = 1;
    uint32 count = 2;
    repeated pb.Source source = 3;
}

message SourceNameRequest {
    string node_id = 1;
    string name = 2;
}

message SourceLinkRequest {
    string id = 1;
    sint32 status = 2;
}

message SourceCloneRequest {
    string id = 1;
    string node_id = 2;
}

message SourcePullRequest {
    int64 after = 1;
    uint32 limit = 2;
    string node_id = 3;
    string source = 4;
}

message SourcePullResponse {
    int64 after = 1;
    uint32 limit = 2;
    repeated pb.Source source = 3;
}

service SourceService {
    rpc Create(pb.Source) returns (pb.Source) {}
    rpc Update(pb.Source) returns (pb.Source) {}
    rpc View(pb.Id) returns (pb.Source) {}
    rpc Name(SourceNameRequest) returns (pb.Source) {}
    rpc NameFull(pb.Name) returns (pb.Source) {}
    rpc Delete(pb.Id) returns (pb.MyBool) {}
    rpc List(SourceListRequest) returns (SourceListResponse) {}
    rpc Link(SourceLinkRequest) returns (pb.MyBool) {}
    rpc Clone(SourceCloneRequest) returns (pb.MyBool) {}
    rpc ViewWithDeleted(pb.Id) returns (pb.Source) {}
    rpc Pull(SourcePullRequest) returns (SourcePullResponse) {}
    rpc Sync(pb.Source) returns (pb.MyBool) {}
}

// pin
message PinListRequest {
    pb.Page page = 1;
    string node_id = 2;
    string source_id = 3;
    string tags = 4;
}

message PinListResponse {
    pb.Page page = 1;
    uint32 count = 2;
    repeated pb.Pin pin = 3;
}

message PinNameRequest {
    string node_id = 1;
    string name = 2;
}

message PinCloneRequest {
    string id = 1;
    string source_id = 2;
}

message PinGetValueByNameRequest {
    string node_id = 1;
    string name = 2;
}

message PinNameValue {
    string node_id = 1;
    string id = 2;
    string name = 3;
    string value = 4;
    int64 updated = 5;
}

message PinPullRequest {
    int64 after = 1;
    uint32 limit = 2;
    string node_id = 3;
    string source_id = 4;
}

message PinPullResponse {
    int64 after = 1;
    uint32 limit = 2;
    repeated pb.Pin pin = 3;
}

message PinPullValueRequest {
    int64 after = 1;
    uint32 limit = 2;
    string node_id = 3;
    string source_id = 4;
}

message PinPullValueResponse {
    int64 after = 1;
    uint32 limit = 2;
    repeated pb.PinValueUpdated pin = 3;
}

service PinService {
    rpc Create(pb.Pin) returns (pb.Pin) {}
    rpc Update(pb.Pin) returns (pb.Pin) {}
    rpc View(pb.Id) returns (pb.Pin) {}
    rpc Name(PinNameRequest) returns (pb.Pin) {}
    rpc NameFull(pb.Name) returns (pb.Pin) {}
    rpc Delete(pb.Id) returns (pb.MyBool) {}
    rpc List(PinListRequest) returns (PinListResponse) {}
    rpc Clone(PinCloneRequest) returns (pb.MyBool) {}
    rpc ViewWithDeleted(pb.Id) returns (pb.Pin) {}
    rpc Pull(PinPullRequest) returns (PinPullResponse) {}
    rpc Sync(pb.Pin) returns (pb.MyBool) {}

    rpc GetValue(pb.Id) returns (pb.PinValue) {}
    rpc SetValue(pb.PinValue) returns (pb.MyBool) {}
    rpc GetValueByName(PinGetValueByNameRequest) returns (PinNameValue) {}
    rpc SetValueByName(PinNameValue) returns (pb.MyBool) {}
    rpc ViewValue(pb.Id) returns (pb.PinValueUpdated) {}
    rpc DeleteValue(pb.Id) returns (pb.MyBool) {}
    rpc PullValue(PinPullValueRequest) returns (PinPullValueResponse) {}
    rpc SyncValue(pb.PinValue) returns (pb.MyBool) {}

    rpc GetWrite(pb.Id) returns (pb.PinValue) {}
    rpc SetWrite(pb.PinValue) returns (pb.MyBool) {}
    rpc GetWriteByName(PinGetValueByNameRequest) returns (PinNameValue) {}
    rpc SetWriteByName(PinNameValue) returns (pb.MyBool) {}
    rpc ViewWrite(pb.Id) returns (pb.PinValueUpdated) {}
    rpc DeleteWrite(pb.Id) returns (pb.MyBool) {}
    rpc PullWrite(PinPullValueRequest) returns (PinPullValueResponse) {}
    rpc SyncWrite(pb.PinValue) returns (pb.MyBool) {}
}
