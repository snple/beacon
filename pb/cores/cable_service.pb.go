// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.12.4
// source: cores/cable_service.proto

package cores

import (
	pb "github.com/snple/kokomi/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// cable
type CableListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     *pb.Page `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	DeviceId string   `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Tags     string   `protobuf:"bytes,3,opt,name=tags,proto3" json:"tags,omitempty"`
	Type     string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *CableListRequest) Reset() {
	*x = CableListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_cable_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CableListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CableListRequest) ProtoMessage() {}

func (x *CableListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_cable_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CableListRequest.ProtoReflect.Descriptor instead.
func (*CableListRequest) Descriptor() ([]byte, []int) {
	return file_cores_cable_service_proto_rawDescGZIP(), []int{0}
}

func (x *CableListRequest) GetPage() *pb.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *CableListRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *CableListRequest) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *CableListRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type CableListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  *pb.Page    `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Count uint32      `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Cable []*pb.Cable `protobuf:"bytes,3,rep,name=cable,proto3" json:"cable,omitempty"`
}

func (x *CableListResponse) Reset() {
	*x = CableListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_cable_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CableListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CableListResponse) ProtoMessage() {}

func (x *CableListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cores_cable_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CableListResponse.ProtoReflect.Descriptor instead.
func (*CableListResponse) Descriptor() ([]byte, []int) {
	return file_cores_cable_service_proto_rawDescGZIP(), []int{1}
}

func (x *CableListResponse) GetPage() *pb.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *CableListResponse) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CableListResponse) GetCable() []*pb.Cable {
	if x != nil {
		return x.Cable
	}
	return nil
}

type CableNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CableNameRequest) Reset() {
	*x = CableNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_cable_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CableNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CableNameRequest) ProtoMessage() {}

func (x *CableNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_cable_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CableNameRequest.ProtoReflect.Descriptor instead.
func (*CableNameRequest) Descriptor() ([]byte, []int) {
	return file_cores_cable_service_proto_rawDescGZIP(), []int{2}
}

func (x *CableNameRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *CableNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CableLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status int32  `protobuf:"zigzag32,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CableLinkRequest) Reset() {
	*x = CableLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_cable_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CableLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CableLinkRequest) ProtoMessage() {}

func (x *CableLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_cable_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CableLinkRequest.ProtoReflect.Descriptor instead.
func (*CableLinkRequest) Descriptor() ([]byte, []int) {
	return file_cores_cable_service_proto_rawDescGZIP(), []int{3}
}

func (x *CableLinkRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CableLinkRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type CableCloneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DeviceId string `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *CableCloneRequest) Reset() {
	*x = CableCloneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_cable_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CableCloneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CableCloneRequest) ProtoMessage() {}

func (x *CableCloneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_cable_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CableCloneRequest.ProtoReflect.Descriptor instead.
func (*CableCloneRequest) Descriptor() ([]byte, []int) {
	return file_cores_cable_service_proto_rawDescGZIP(), []int{4}
}

func (x *CableCloneRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CableCloneRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type CablePullRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After    int64  `protobuf:"varint,1,opt,name=after,proto3" json:"after,omitempty"`
	Limit    uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	DeviceId string `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Type     string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *CablePullRequest) Reset() {
	*x = CablePullRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_cable_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CablePullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CablePullRequest) ProtoMessage() {}

func (x *CablePullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_cable_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CablePullRequest.ProtoReflect.Descriptor instead.
func (*CablePullRequest) Descriptor() ([]byte, []int) {
	return file_cores_cable_service_proto_rawDescGZIP(), []int{5}
}

func (x *CablePullRequest) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *CablePullRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *CablePullRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *CablePullRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type CablePullResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After int64       `protobuf:"varint,1,opt,name=after,proto3" json:"after,omitempty"`
	Limit uint32      `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Cable []*pb.Cable `protobuf:"bytes,3,rep,name=cable,proto3" json:"cable,omitempty"`
}

func (x *CablePullResponse) Reset() {
	*x = CablePullResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_cable_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CablePullResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CablePullResponse) ProtoMessage() {}

func (x *CablePullResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cores_cable_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CablePullResponse.ProtoReflect.Descriptor instead.
func (*CablePullResponse) Descriptor() ([]byte, []int) {
	return file_cores_cable_service_proto_rawDescGZIP(), []int{6}
}

func (x *CablePullResponse) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *CablePullResponse) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *CablePullResponse) GetCable() []*pb.Cable {
	if x != nil {
		return x.Cable
	}
	return nil
}

// wire
type WireListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     *pb.Page `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	DeviceId string   `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	CableId  string   `protobuf:"bytes,3,opt,name=cable_id,json=cableId,proto3" json:"cable_id,omitempty"`
	Tags     string   `protobuf:"bytes,4,opt,name=tags,proto3" json:"tags,omitempty"`
	Type     string   `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *WireListRequest) Reset() {
	*x = WireListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_cable_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WireListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WireListRequest) ProtoMessage() {}

func (x *WireListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_cable_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WireListRequest.ProtoReflect.Descriptor instead.
func (*WireListRequest) Descriptor() ([]byte, []int) {
	return file_cores_cable_service_proto_rawDescGZIP(), []int{7}
}

func (x *WireListRequest) GetPage() *pb.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *WireListRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *WireListRequest) GetCableId() string {
	if x != nil {
		return x.CableId
	}
	return ""
}

func (x *WireListRequest) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *WireListRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type WireListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  *pb.Page   `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Count uint32     `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Wire  []*pb.Wire `protobuf:"bytes,3,rep,name=wire,proto3" json:"wire,omitempty"`
}

func (x *WireListResponse) Reset() {
	*x = WireListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_cable_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WireListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WireListResponse) ProtoMessage() {}

func (x *WireListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cores_cable_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WireListResponse.ProtoReflect.Descriptor instead.
func (*WireListResponse) Descriptor() ([]byte, []int) {
	return file_cores_cable_service_proto_rawDescGZIP(), []int{8}
}

func (x *WireListResponse) GetPage() *pb.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *WireListResponse) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *WireListResponse) GetWire() []*pb.Wire {
	if x != nil {
		return x.Wire
	}
	return nil
}

type WireNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *WireNameRequest) Reset() {
	*x = WireNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_cable_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WireNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WireNameRequest) ProtoMessage() {}

func (x *WireNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_cable_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WireNameRequest.ProtoReflect.Descriptor instead.
func (*WireNameRequest) Descriptor() ([]byte, []int) {
	return file_cores_cable_service_proto_rawDescGZIP(), []int{9}
}

func (x *WireNameRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *WireNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type WireCloneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CableId string `protobuf:"bytes,2,opt,name=cable_id,json=cableId,proto3" json:"cable_id,omitempty"`
}

func (x *WireCloneRequest) Reset() {
	*x = WireCloneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_cable_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WireCloneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WireCloneRequest) ProtoMessage() {}

func (x *WireCloneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_cable_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WireCloneRequest.ProtoReflect.Descriptor instead.
func (*WireCloneRequest) Descriptor() ([]byte, []int) {
	return file_cores_cable_service_proto_rawDescGZIP(), []int{10}
}

func (x *WireCloneRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WireCloneRequest) GetCableId() string {
	if x != nil {
		return x.CableId
	}
	return ""
}

type WireGetValueByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *WireGetValueByNameRequest) Reset() {
	*x = WireGetValueByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_cable_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WireGetValueByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WireGetValueByNameRequest) ProtoMessage() {}

func (x *WireGetValueByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_cable_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WireGetValueByNameRequest.ProtoReflect.Descriptor instead.
func (*WireGetValueByNameRequest) Descriptor() ([]byte, []int) {
	return file_cores_cable_service_proto_rawDescGZIP(), []int{11}
}

func (x *WireGetValueByNameRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *WireGetValueByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type WireNameValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Id       string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Value    string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Updated  int64  `protobuf:"varint,5,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *WireNameValue) Reset() {
	*x = WireNameValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_cable_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WireNameValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WireNameValue) ProtoMessage() {}

func (x *WireNameValue) ProtoReflect() protoreflect.Message {
	mi := &file_cores_cable_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WireNameValue.ProtoReflect.Descriptor instead.
func (*WireNameValue) Descriptor() ([]byte, []int) {
	return file_cores_cable_service_proto_rawDescGZIP(), []int{12}
}

func (x *WireNameValue) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *WireNameValue) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WireNameValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WireNameValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *WireNameValue) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type WirePullRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After    int64  `protobuf:"varint,1,opt,name=after,proto3" json:"after,omitempty"`
	Limit    uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	DeviceId string `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	CableId  string `protobuf:"bytes,4,opt,name=cable_id,json=cableId,proto3" json:"cable_id,omitempty"`
	Type     string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *WirePullRequest) Reset() {
	*x = WirePullRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_cable_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WirePullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WirePullRequest) ProtoMessage() {}

func (x *WirePullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_cable_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WirePullRequest.ProtoReflect.Descriptor instead.
func (*WirePullRequest) Descriptor() ([]byte, []int) {
	return file_cores_cable_service_proto_rawDescGZIP(), []int{13}
}

func (x *WirePullRequest) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *WirePullRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *WirePullRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *WirePullRequest) GetCableId() string {
	if x != nil {
		return x.CableId
	}
	return ""
}

func (x *WirePullRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type WirePullResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After int64      `protobuf:"varint,1,opt,name=after,proto3" json:"after,omitempty"`
	Limit uint32     `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Wire  []*pb.Wire `protobuf:"bytes,3,rep,name=wire,proto3" json:"wire,omitempty"`
}

func (x *WirePullResponse) Reset() {
	*x = WirePullResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_cable_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WirePullResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WirePullResponse) ProtoMessage() {}

func (x *WirePullResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cores_cable_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WirePullResponse.ProtoReflect.Descriptor instead.
func (*WirePullResponse) Descriptor() ([]byte, []int) {
	return file_cores_cable_service_proto_rawDescGZIP(), []int{14}
}

func (x *WirePullResponse) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *WirePullResponse) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *WirePullResponse) GetWire() []*pb.Wire {
	if x != nil {
		return x.Wire
	}
	return nil
}

type WirePullValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After    int64  `protobuf:"varint,1,opt,name=after,proto3" json:"after,omitempty"`
	Limit    uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	DeviceId string `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	CableId  string `protobuf:"bytes,4,opt,name=cable_id,json=cableId,proto3" json:"cable_id,omitempty"`
}

func (x *WirePullValueRequest) Reset() {
	*x = WirePullValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_cable_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WirePullValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WirePullValueRequest) ProtoMessage() {}

func (x *WirePullValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_cable_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WirePullValueRequest.ProtoReflect.Descriptor instead.
func (*WirePullValueRequest) Descriptor() ([]byte, []int) {
	return file_cores_cable_service_proto_rawDescGZIP(), []int{15}
}

func (x *WirePullValueRequest) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *WirePullValueRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *WirePullValueRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *WirePullValueRequest) GetCableId() string {
	if x != nil {
		return x.CableId
	}
	return ""
}

type WirePullValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After int64                  `protobuf:"varint,1,opt,name=after,proto3" json:"after,omitempty"`
	Limit uint32                 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Wire  []*pb.WireValueUpdated `protobuf:"bytes,3,rep,name=wire,proto3" json:"wire,omitempty"`
}

func (x *WirePullValueResponse) Reset() {
	*x = WirePullValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_cable_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WirePullValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WirePullValueResponse) ProtoMessage() {}

func (x *WirePullValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cores_cable_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WirePullValueResponse.ProtoReflect.Descriptor instead.
func (*WirePullValueResponse) Descriptor() ([]byte, []int) {
	return file_cores_cable_service_proto_rawDescGZIP(), []int{16}
}

func (x *WirePullValueResponse) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *WirePullValueResponse) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *WirePullValueResponse) GetWire() []*pb.WireValueUpdated {
	if x != nil {
		return x.Wire
	}
	return nil
}

var File_cores_cable_service_proto protoreflect.FileDescriptor

var file_cores_cable_service_proto_rawDesc = []byte{
	0x0a, 0x19, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2f, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x1a, 0x13, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x75,
	0x0a, 0x10, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x68, 0x0a, 0x11, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x05, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x05, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x22,
	0x43, 0x0a, 0x10, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x10, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x40, 0x0a, 0x11, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x22, 0x6f, 0x0a, 0x10, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x60, 0x0a, 0x11, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x05,
	0x63, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x0f, 0x57, 0x69, 0x72, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x64, 0x0a, 0x10, 0x57, 0x69, 0x72, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1c, 0x0a, 0x04, 0x77, 0x69, 0x72, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x70, 0x62, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x52, 0x04, 0x77, 0x69, 0x72, 0x65, 0x22, 0x42, 0x0a,
	0x0f, 0x57, 0x69, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x3d, 0x0a, 0x10, 0x57, 0x69, 0x72, 0x65, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64,
	0x22, 0x4c, 0x0a, 0x19, 0x57, 0x69, 0x72, 0x65, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x80,
	0x01, 0x0a, 0x0d, 0x57, 0x69, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x22, 0x89, 0x01, 0x0a, 0x0f, 0x57, 0x69, 0x72, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x5c, 0x0a,
	0x10, 0x57, 0x69, 0x72, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a,
	0x04, 0x77, 0x69, 0x72, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62,
	0x2e, 0x57, 0x69, 0x72, 0x65, 0x52, 0x04, 0x77, 0x69, 0x72, 0x65, 0x22, 0x7a, 0x0a, 0x14, 0x57,
	0x69, 0x72, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x15, 0x57, 0x69, 0x72, 0x65, 0x50,
	0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x04,
	0x77, 0x69, 0x72, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x57, 0x69, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x52, 0x04, 0x77, 0x69, 0x72, 0x65, 0x32, 0x83, 0x04, 0x0a, 0x0c, 0x43, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x09, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x20, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x09,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x1b, 0x0a, 0x04, 0x56,
	0x69, 0x65, 0x77, 0x12, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x1a, 0x09, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x61, 0x62, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x21, 0x0a, 0x08, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x75,
	0x6c, 0x6c, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x09, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x1e, 0x0a, 0x06, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x1a, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x04, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x2e, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x17,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42,
	0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x12, 0x18,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79,
	0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x26, 0x0a, 0x0f, 0x56, 0x69, 0x65, 0x77, 0x57, 0x69,
	0x74, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x49,
	0x64, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x3b,
	0x0a, 0x04, 0x50, 0x75, 0x6c, 0x6c, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x43,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x1f, 0x0a, 0x04, 0x53,
	0x79, 0x6e, 0x63, 0x12, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x32, 0xcb, 0x07, 0x0a,
	0x0b, 0x57, 0x69, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x69, 0x72, 0x65,
	0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x22, 0x00, 0x12, 0x1e, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x69, 0x72, 0x65,
	0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x22, 0x00, 0x12, 0x1a, 0x0a, 0x04,
	0x56, 0x69, 0x65, 0x77, 0x12, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x1a, 0x08, 0x2e, 0x70,
	0x62, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x69,
	0x72, 0x65, 0x22, 0x00, 0x12, 0x20, 0x0a, 0x08, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x75, 0x6c, 0x6c,
	0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e,
	0x57, 0x69, 0x72, 0x65, 0x22, 0x00, 0x12, 0x1e, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79,
	0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x57,
	0x69, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x2e, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22,
	0x00, 0x12, 0x23, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x06, 0x2e,
	0x70, 0x62, 0x2e, 0x49, 0x64, 0x1a, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x00, 0x12, 0x27, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12,
	0x30, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x6e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x64, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22,
	0x00, 0x12, 0x4a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x57, 0x69, 0x72, 0x65,
	0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x57, 0x69,
	0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a,
	0x0e, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f,
	0x6c, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x55, 0x6e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x14,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c,
	0x22, 0x00, 0x12, 0x25, 0x0a, 0x0f, 0x56, 0x69, 0x65, 0x77, 0x57, 0x69, 0x74, 0x68, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x1a, 0x08, 0x2e,
	0x70, 0x62, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x04, 0x50, 0x75, 0x6c,
	0x6c, 0x12, 0x16, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x50, 0x75,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x1e, 0x0a, 0x04, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x08, 0x2e, 0x70,
	0x62, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f,
	0x6f, 0x6c, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x09, 0x56, 0x69, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x57,
	0x69, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22,
	0x00, 0x12, 0x23, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79,
	0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x09, 0x50, 0x75, 0x6c, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x57, 0x69, 0x72, 0x65,
	0x50, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x50, 0x75, 0x6c,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x28, 0x0a, 0x09, 0x53, 0x79, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0d, 0x2e,
	0x70, 0x62, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0a, 0x2e, 0x70,
	0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6e, 0x70, 0x6c, 0x65, 0x2f, 0x6b,
	0x6f, 0x6b, 0x6f, 0x6d, 0x69, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x3b, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cores_cable_service_proto_rawDescOnce sync.Once
	file_cores_cable_service_proto_rawDescData = file_cores_cable_service_proto_rawDesc
)

func file_cores_cable_service_proto_rawDescGZIP() []byte {
	file_cores_cable_service_proto_rawDescOnce.Do(func() {
		file_cores_cable_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_cores_cable_service_proto_rawDescData)
	})
	return file_cores_cable_service_proto_rawDescData
}

var file_cores_cable_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_cores_cable_service_proto_goTypes = []interface{}{
	(*CableListRequest)(nil),          // 0: cores.CableListRequest
	(*CableListResponse)(nil),         // 1: cores.CableListResponse
	(*CableNameRequest)(nil),          // 2: cores.CableNameRequest
	(*CableLinkRequest)(nil),          // 3: cores.CableLinkRequest
	(*CableCloneRequest)(nil),         // 4: cores.CableCloneRequest
	(*CablePullRequest)(nil),          // 5: cores.CablePullRequest
	(*CablePullResponse)(nil),         // 6: cores.CablePullResponse
	(*WireListRequest)(nil),           // 7: cores.WireListRequest
	(*WireListResponse)(nil),          // 8: cores.WireListResponse
	(*WireNameRequest)(nil),           // 9: cores.WireNameRequest
	(*WireCloneRequest)(nil),          // 10: cores.WireCloneRequest
	(*WireGetValueByNameRequest)(nil), // 11: cores.WireGetValueByNameRequest
	(*WireNameValue)(nil),             // 12: cores.WireNameValue
	(*WirePullRequest)(nil),           // 13: cores.WirePullRequest
	(*WirePullResponse)(nil),          // 14: cores.WirePullResponse
	(*WirePullValueRequest)(nil),      // 15: cores.WirePullValueRequest
	(*WirePullValueResponse)(nil),     // 16: cores.WirePullValueResponse
	(*pb.Page)(nil),                   // 17: pb.Page
	(*pb.Cable)(nil),                  // 18: pb.Cable
	(*pb.Wire)(nil),                   // 19: pb.Wire
	(*pb.WireValueUpdated)(nil),       // 20: pb.WireValueUpdated
	(*pb.Id)(nil),                     // 21: pb.Id
	(*pb.Name)(nil),                   // 22: pb.Name
	(*pb.WireValue)(nil),              // 23: pb.WireValue
	(*pb.MyBool)(nil),                 // 24: pb.MyBool
}
var file_cores_cable_service_proto_depIdxs = []int32{
	17, // 0: cores.CableListRequest.page:type_name -> pb.Page
	17, // 1: cores.CableListResponse.page:type_name -> pb.Page
	18, // 2: cores.CableListResponse.cable:type_name -> pb.Cable
	18, // 3: cores.CablePullResponse.cable:type_name -> pb.Cable
	17, // 4: cores.WireListRequest.page:type_name -> pb.Page
	17, // 5: cores.WireListResponse.page:type_name -> pb.Page
	19, // 6: cores.WireListResponse.wire:type_name -> pb.Wire
	19, // 7: cores.WirePullResponse.wire:type_name -> pb.Wire
	20, // 8: cores.WirePullValueResponse.wire:type_name -> pb.WireValueUpdated
	18, // 9: cores.CableService.Create:input_type -> pb.Cable
	18, // 10: cores.CableService.Update:input_type -> pb.Cable
	21, // 11: cores.CableService.View:input_type -> pb.Id
	2,  // 12: cores.CableService.Name:input_type -> cores.CableNameRequest
	22, // 13: cores.CableService.NameFull:input_type -> pb.Name
	21, // 14: cores.CableService.Delete:input_type -> pb.Id
	0,  // 15: cores.CableService.List:input_type -> cores.CableListRequest
	3,  // 16: cores.CableService.Link:input_type -> cores.CableLinkRequest
	4,  // 17: cores.CableService.Clone:input_type -> cores.CableCloneRequest
	21, // 18: cores.CableService.ViewWithDeleted:input_type -> pb.Id
	5,  // 19: cores.CableService.Pull:input_type -> cores.CablePullRequest
	18, // 20: cores.CableService.Sync:input_type -> pb.Cable
	19, // 21: cores.WireService.Create:input_type -> pb.Wire
	19, // 22: cores.WireService.Update:input_type -> pb.Wire
	21, // 23: cores.WireService.View:input_type -> pb.Id
	9,  // 24: cores.WireService.Name:input_type -> cores.WireNameRequest
	22, // 25: cores.WireService.NameFull:input_type -> pb.Name
	21, // 26: cores.WireService.Delete:input_type -> pb.Id
	7,  // 27: cores.WireService.List:input_type -> cores.WireListRequest
	10, // 28: cores.WireService.Clone:input_type -> cores.WireCloneRequest
	21, // 29: cores.WireService.GetValue:input_type -> pb.Id
	23, // 30: cores.WireService.SetValue:input_type -> pb.WireValue
	23, // 31: cores.WireService.SetValueUnchecked:input_type -> pb.WireValue
	11, // 32: cores.WireService.GetValueByName:input_type -> cores.WireGetValueByNameRequest
	12, // 33: cores.WireService.SetValueByName:input_type -> cores.WireNameValue
	12, // 34: cores.WireService.SetValueByNameUnchecked:input_type -> cores.WireNameValue
	21, // 35: cores.WireService.ViewWithDeleted:input_type -> pb.Id
	13, // 36: cores.WireService.Pull:input_type -> cores.WirePullRequest
	19, // 37: cores.WireService.Sync:input_type -> pb.Wire
	21, // 38: cores.WireService.ViewValue:input_type -> pb.Id
	21, // 39: cores.WireService.DeleteValue:input_type -> pb.Id
	15, // 40: cores.WireService.PullValue:input_type -> cores.WirePullValueRequest
	23, // 41: cores.WireService.SyncValue:input_type -> pb.WireValue
	18, // 42: cores.CableService.Create:output_type -> pb.Cable
	18, // 43: cores.CableService.Update:output_type -> pb.Cable
	18, // 44: cores.CableService.View:output_type -> pb.Cable
	18, // 45: cores.CableService.Name:output_type -> pb.Cable
	18, // 46: cores.CableService.NameFull:output_type -> pb.Cable
	24, // 47: cores.CableService.Delete:output_type -> pb.MyBool
	1,  // 48: cores.CableService.List:output_type -> cores.CableListResponse
	24, // 49: cores.CableService.Link:output_type -> pb.MyBool
	24, // 50: cores.CableService.Clone:output_type -> pb.MyBool
	18, // 51: cores.CableService.ViewWithDeleted:output_type -> pb.Cable
	6,  // 52: cores.CableService.Pull:output_type -> cores.CablePullResponse
	24, // 53: cores.CableService.Sync:output_type -> pb.MyBool
	19, // 54: cores.WireService.Create:output_type -> pb.Wire
	19, // 55: cores.WireService.Update:output_type -> pb.Wire
	19, // 56: cores.WireService.View:output_type -> pb.Wire
	19, // 57: cores.WireService.Name:output_type -> pb.Wire
	19, // 58: cores.WireService.NameFull:output_type -> pb.Wire
	24, // 59: cores.WireService.Delete:output_type -> pb.MyBool
	8,  // 60: cores.WireService.List:output_type -> cores.WireListResponse
	24, // 61: cores.WireService.Clone:output_type -> pb.MyBool
	23, // 62: cores.WireService.GetValue:output_type -> pb.WireValue
	24, // 63: cores.WireService.SetValue:output_type -> pb.MyBool
	24, // 64: cores.WireService.SetValueUnchecked:output_type -> pb.MyBool
	12, // 65: cores.WireService.GetValueByName:output_type -> cores.WireNameValue
	24, // 66: cores.WireService.SetValueByName:output_type -> pb.MyBool
	24, // 67: cores.WireService.SetValueByNameUnchecked:output_type -> pb.MyBool
	19, // 68: cores.WireService.ViewWithDeleted:output_type -> pb.Wire
	14, // 69: cores.WireService.Pull:output_type -> cores.WirePullResponse
	24, // 70: cores.WireService.Sync:output_type -> pb.MyBool
	20, // 71: cores.WireService.ViewValue:output_type -> pb.WireValueUpdated
	24, // 72: cores.WireService.DeleteValue:output_type -> pb.MyBool
	16, // 73: cores.WireService.PullValue:output_type -> cores.WirePullValueResponse
	24, // 74: cores.WireService.SyncValue:output_type -> pb.MyBool
	42, // [42:75] is the sub-list for method output_type
	9,  // [9:42] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_cores_cable_service_proto_init() }
func file_cores_cable_service_proto_init() {
	if File_cores_cable_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cores_cable_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CableListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_cable_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CableListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_cable_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CableNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_cable_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CableLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_cable_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CableCloneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_cable_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CablePullRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_cable_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CablePullResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_cable_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WireListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_cable_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WireListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_cable_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WireNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_cable_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WireCloneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_cable_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WireGetValueByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_cable_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WireNameValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_cable_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WirePullRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_cable_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WirePullResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_cable_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WirePullValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_cable_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WirePullValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cores_cable_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_cores_cable_service_proto_goTypes,
		DependencyIndexes: file_cores_cable_service_proto_depIdxs,
		MessageInfos:      file_cores_cable_service_proto_msgTypes,
	}.Build()
	File_cores_cable_service_proto = out.File
	file_cores_cable_service_proto_rawDesc = nil
	file_cores_cable_service_proto_goTypes = nil
	file_cores_cable_service_proto_depIdxs = nil
}
