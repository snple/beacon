// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: cores/source_service.proto

package cores

import (
	pb "github.com/snple/kokomi/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// source
type ListSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     *pb.Page `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	DeviceId string   `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Tags     string   `protobuf:"bytes,3,opt,name=tags,proto3" json:"tags,omitempty"`
	Type     string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Source   string   `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *ListSourceRequest) Reset() {
	*x = ListSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSourceRequest) ProtoMessage() {}

func (x *ListSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSourceRequest.ProtoReflect.Descriptor instead.
func (*ListSourceRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListSourceRequest) GetPage() *pb.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListSourceRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ListSourceRequest) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *ListSourceRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ListSourceRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type ListSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   *pb.Page     `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Count  uint32       `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Source []*pb.Source `protobuf:"bytes,3,rep,name=source,proto3" json:"source,omitempty"`
}

func (x *ListSourceResponse) Reset() {
	*x = ListSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSourceResponse) ProtoMessage() {}

func (x *ListSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSourceResponse.ProtoReflect.Descriptor instead.
func (*ListSourceResponse) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListSourceResponse) GetPage() *pb.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListSourceResponse) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListSourceResponse) GetSource() []*pb.Source {
	if x != nil {
		return x.Source
	}
	return nil
}

type ViewSourceByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ViewSourceByNameRequest) Reset() {
	*x = ViewSourceByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewSourceByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewSourceByNameRequest) ProtoMessage() {}

func (x *ViewSourceByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewSourceByNameRequest.ProtoReflect.Descriptor instead.
func (*ViewSourceByNameRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{2}
}

func (x *ViewSourceByNameRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ViewSourceByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type LinkSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status int32  `protobuf:"zigzag32,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *LinkSourceRequest) Reset() {
	*x = LinkSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkSourceRequest) ProtoMessage() {}

func (x *LinkSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkSourceRequest.ProtoReflect.Descriptor instead.
func (*LinkSourceRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{3}
}

func (x *LinkSourceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LinkSourceRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type CloneSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DeviceId string `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *CloneSourceRequest) Reset() {
	*x = CloneSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloneSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneSourceRequest) ProtoMessage() {}

func (x *CloneSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneSourceRequest.ProtoReflect.Descriptor instead.
func (*CloneSourceRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{4}
}

func (x *CloneSourceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CloneSourceRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type PullSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After    int64  `protobuf:"varint,1,opt,name=after,proto3" json:"after,omitempty"`
	Limit    uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	DeviceId string `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Type     string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Source   string `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *PullSourceRequest) Reset() {
	*x = PullSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSourceRequest) ProtoMessage() {}

func (x *PullSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSourceRequest.ProtoReflect.Descriptor instead.
func (*PullSourceRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{5}
}

func (x *PullSourceRequest) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *PullSourceRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PullSourceRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *PullSourceRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PullSourceRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type PullSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After  int64        `protobuf:"varint,1,opt,name=after,proto3" json:"after,omitempty"`
	Limit  uint32       `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Source []*pb.Source `protobuf:"bytes,3,rep,name=source,proto3" json:"source,omitempty"`
}

func (x *PullSourceResponse) Reset() {
	*x = PullSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSourceResponse) ProtoMessage() {}

func (x *PullSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSourceResponse.ProtoReflect.Descriptor instead.
func (*PullSourceResponse) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{6}
}

func (x *PullSourceResponse) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *PullSourceResponse) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PullSourceResponse) GetSource() []*pb.Source {
	if x != nil {
		return x.Source
	}
	return nil
}

// tag
type ListTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     *pb.Page `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	DeviceId string   `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	SourceId string   `protobuf:"bytes,3,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	Tags     string   `protobuf:"bytes,4,opt,name=tags,proto3" json:"tags,omitempty"`
	Type     string   `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ListTagRequest) Reset() {
	*x = ListTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagRequest) ProtoMessage() {}

func (x *ListTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTagRequest.ProtoReflect.Descriptor instead.
func (*ListTagRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListTagRequest) GetPage() *pb.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListTagRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ListTagRequest) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *ListTagRequest) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *ListTagRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ListTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  *pb.Page  `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Count uint32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Tag   []*pb.Tag `protobuf:"bytes,3,rep,name=tag,proto3" json:"tag,omitempty"`
}

func (x *ListTagResponse) Reset() {
	*x = ListTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagResponse) ProtoMessage() {}

func (x *ListTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTagResponse.ProtoReflect.Descriptor instead.
func (*ListTagResponse) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListTagResponse) GetPage() *pb.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListTagResponse) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListTagResponse) GetTag() []*pb.Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type ViewTagByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ViewTagByNameRequest) Reset() {
	*x = ViewTagByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewTagByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewTagByNameRequest) ProtoMessage() {}

func (x *ViewTagByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewTagByNameRequest.ProtoReflect.Descriptor instead.
func (*ViewTagByNameRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{9}
}

func (x *ViewTagByNameRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ViewTagByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CloneTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SourceId string `protobuf:"bytes,2,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
}

func (x *CloneTagRequest) Reset() {
	*x = CloneTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloneTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneTagRequest) ProtoMessage() {}

func (x *CloneTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneTagRequest.ProtoReflect.Descriptor instead.
func (*CloneTagRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{10}
}

func (x *CloneTagRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CloneTagRequest) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

type GetTagValueByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetTagValueByNameRequest) Reset() {
	*x = GetTagValueByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTagValueByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagValueByNameRequest) ProtoMessage() {}

func (x *GetTagValueByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagValueByNameRequest.ProtoReflect.Descriptor instead.
func (*GetTagValueByNameRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetTagValueByNameRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *GetTagValueByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type TagNameValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value    string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Updated  int64  `protobuf:"varint,4,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *TagNameValue) Reset() {
	*x = TagNameValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagNameValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagNameValue) ProtoMessage() {}

func (x *TagNameValue) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagNameValue.ProtoReflect.Descriptor instead.
func (*TagNameValue) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{12}
}

func (x *TagNameValue) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *TagNameValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TagNameValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TagNameValue) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type PullTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After    int64  `protobuf:"varint,1,opt,name=after,proto3" json:"after,omitempty"`
	Limit    uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	DeviceId string `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	SourceId string `protobuf:"bytes,4,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	Type     string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *PullTagRequest) Reset() {
	*x = PullTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullTagRequest) ProtoMessage() {}

func (x *PullTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullTagRequest.ProtoReflect.Descriptor instead.
func (*PullTagRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{13}
}

func (x *PullTagRequest) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *PullTagRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PullTagRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *PullTagRequest) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *PullTagRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type PullTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After int64     `protobuf:"varint,1,opt,name=after,proto3" json:"after,omitempty"`
	Limit uint32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Tag   []*pb.Tag `protobuf:"bytes,3,rep,name=tag,proto3" json:"tag,omitempty"`
}

func (x *PullTagResponse) Reset() {
	*x = PullTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullTagResponse) ProtoMessage() {}

func (x *PullTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullTagResponse.ProtoReflect.Descriptor instead.
func (*PullTagResponse) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{14}
}

func (x *PullTagResponse) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *PullTagResponse) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PullTagResponse) GetTag() []*pb.Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type PullTagValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After    int64  `protobuf:"varint,1,opt,name=after,proto3" json:"after,omitempty"`
	Limit    uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	DeviceId string `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	SourceId string `protobuf:"bytes,4,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
}

func (x *PullTagValueRequest) Reset() {
	*x = PullTagValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullTagValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullTagValueRequest) ProtoMessage() {}

func (x *PullTagValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullTagValueRequest.ProtoReflect.Descriptor instead.
func (*PullTagValueRequest) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{15}
}

func (x *PullTagValueRequest) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *PullTagValueRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PullTagValueRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *PullTagValueRequest) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

type PullTagValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After int64                 `protobuf:"varint,1,opt,name=after,proto3" json:"after,omitempty"`
	Limit uint32                `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Tag   []*pb.TagValueUpdated `protobuf:"bytes,3,rep,name=tag,proto3" json:"tag,omitempty"`
}

func (x *PullTagValueResponse) Reset() {
	*x = PullTagValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cores_source_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullTagValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullTagValueResponse) ProtoMessage() {}

func (x *PullTagValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cores_source_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullTagValueResponse.ProtoReflect.Descriptor instead.
func (*PullTagValueResponse) Descriptor() ([]byte, []int) {
	return file_cores_source_service_proto_rawDescGZIP(), []int{16}
}

func (x *PullTagValueResponse) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *PullTagValueResponse) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PullTagValueResponse) GetTag() []*pb.TagValueUpdated {
	if x != nil {
		return x.Tag
	}
	return nil
}

var File_cores_source_service_proto protoreflect.FileDescriptor

var file_cores_source_service_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x1a, 0x14, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8e, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0x6c, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22,
	0x4a, 0x0a, 0x17, 0x56, 0x69, 0x65, 0x77, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3b, 0x0a, 0x11, 0x4c,
	0x69, 0x6e, 0x6b, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x41, 0x0a, 0x12, 0x43, 0x6c, 0x6f, 0x6e,
	0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x11,
	0x50, 0x75, 0x6c, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x64, 0x0a, 0x12, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x66, 0x74,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x90, 0x01, 0x0a,
	0x0e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x60, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61,
	0x67, 0x22, 0x47, 0x0a, 0x14, 0x56, 0x69, 0x65, 0x77, 0x54, 0x61, 0x67, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x0f, 0x43, 0x6c,
	0x6f, 0x6e, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6f, 0x0a, 0x0c, 0x54, 0x61, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x0e, 0x50, 0x75, 0x6c,
	0x6c, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x58, 0x0a, 0x0f, 0x50, 0x75, 0x6c, 0x6c, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22,
	0x7b, 0x0a, 0x13, 0x50, 0x75, 0x6c, 0x6c, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x14,
	0x50, 0x75, 0x6c, 0x6c, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x25, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x03, 0x74, 0x61, 0x67, 0x32, 0x84, 0x04, 0x0a, 0x0d, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x00, 0x12, 0x22, 0x0a,
	0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22,
	0x00, 0x12, 0x1c, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x49,
	0x64, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x00, 0x12,
	0x3a, 0x0a, 0x0a, 0x56, 0x69, 0x65, 0x77, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x0e, 0x56,
	0x69, 0x65, 0x77, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x08, 0x2e,
	0x70, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x22, 0x00, 0x12, 0x1e, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x06, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42,
	0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x18, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f,
	0x6f, 0x6c, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79,
	0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x27, 0x0a, 0x0f, 0x56, 0x69, 0x65, 0x77, 0x57, 0x69,
	0x74, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x49,
	0x64, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x00, 0x12,
	0x3d, 0x0a, 0x04, 0x50, 0x75, 0x6c, 0x6c, 0x12, 0x18, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e,
	0x50, 0x75, 0x6c, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xa3,
	0x07, 0x0a, 0x0a, 0x54, 0x61, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67,
	0x1a, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x22, 0x00, 0x12, 0x1c, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x1a, 0x07,
	0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x22, 0x00, 0x12, 0x19, 0x0a, 0x04, 0x56, 0x69, 0x65,
	0x77, 0x12, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x1a, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x54,
	0x61, 0x67, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0a, 0x56, 0x69, 0x65, 0x77, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x54,
	0x61, 0x67, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x07, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x0e, 0x56, 0x69,
	0x65, 0x77, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x08, 0x2e, 0x70,
	0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x22,
	0x00, 0x12, 0x1e, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x06, 0x2e, 0x70, 0x62,
	0x2e, 0x49, 0x64, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22,
	0x00, 0x12, 0x37, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x05, 0x43, 0x6c,
	0x6f, 0x6e, 0x65, 0x12, 0x16, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x6e,
	0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x22, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x1a, 0x0c, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x00, 0x12, 0x26, 0x0a,
	0x08, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x54,
	0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42,
	0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x27, 0x0a, 0x09, 0x53, 0x79, 0x6e, 0x63, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x2f,
	0x0a, 0x11, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x6e, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x64, 0x12, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12,
	0x48, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0e, 0x53, 0x65, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x13, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x3c,
	0x0a, 0x17, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x55, 0x6e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x2e, 0x54, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x24, 0x0a, 0x0f,
	0x56, 0x69, 0x65, 0x77, 0x57, 0x69, 0x74, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x06, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x1a, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67,
	0x22, 0x00, 0x12, 0x37, 0x0a, 0x04, 0x50, 0x75, 0x6c, 0x6c, 0x12, 0x15, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x54, 0x61,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x09, 0x56,
	0x69, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64,
	0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x64, 0x1a, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x09,
	0x50, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x2e, 0x50, 0x75,
	0x6c, 0x6c, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x6e, 0x70, 0x6c, 0x65, 0x2f, 0x6b, 0x6f, 0x6b, 0x6f, 0x6d, 0x69, 0x2f,
	0x70, 0x62, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x3b, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cores_source_service_proto_rawDescOnce sync.Once
	file_cores_source_service_proto_rawDescData = file_cores_source_service_proto_rawDesc
)

func file_cores_source_service_proto_rawDescGZIP() []byte {
	file_cores_source_service_proto_rawDescOnce.Do(func() {
		file_cores_source_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_cores_source_service_proto_rawDescData)
	})
	return file_cores_source_service_proto_rawDescData
}

var file_cores_source_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_cores_source_service_proto_goTypes = []interface{}{
	(*ListSourceRequest)(nil),        // 0: cores.ListSourceRequest
	(*ListSourceResponse)(nil),       // 1: cores.ListSourceResponse
	(*ViewSourceByNameRequest)(nil),  // 2: cores.ViewSourceByNameRequest
	(*LinkSourceRequest)(nil),        // 3: cores.LinkSourceRequest
	(*CloneSourceRequest)(nil),       // 4: cores.CloneSourceRequest
	(*PullSourceRequest)(nil),        // 5: cores.PullSourceRequest
	(*PullSourceResponse)(nil),       // 6: cores.PullSourceResponse
	(*ListTagRequest)(nil),           // 7: cores.ListTagRequest
	(*ListTagResponse)(nil),          // 8: cores.ListTagResponse
	(*ViewTagByNameRequest)(nil),     // 9: cores.ViewTagByNameRequest
	(*CloneTagRequest)(nil),          // 10: cores.CloneTagRequest
	(*GetTagValueByNameRequest)(nil), // 11: cores.GetTagValueByNameRequest
	(*TagNameValue)(nil),             // 12: cores.TagNameValue
	(*PullTagRequest)(nil),           // 13: cores.PullTagRequest
	(*PullTagResponse)(nil),          // 14: cores.PullTagResponse
	(*PullTagValueRequest)(nil),      // 15: cores.PullTagValueRequest
	(*PullTagValueResponse)(nil),     // 16: cores.PullTagValueResponse
	(*pb.Page)(nil),                  // 17: pb.Page
	(*pb.Source)(nil),                // 18: pb.Source
	(*pb.Tag)(nil),                   // 19: pb.Tag
	(*pb.TagValueUpdated)(nil),       // 20: pb.TagValueUpdated
	(*pb.Id)(nil),                    // 21: pb.Id
	(*pb.Name)(nil),                  // 22: pb.Name
	(*pb.TagValue)(nil),              // 23: pb.TagValue
	(*pb.MyBool)(nil),                // 24: pb.MyBool
}
var file_cores_source_service_proto_depIdxs = []int32{
	17, // 0: cores.ListSourceRequest.page:type_name -> pb.Page
	17, // 1: cores.ListSourceResponse.page:type_name -> pb.Page
	18, // 2: cores.ListSourceResponse.source:type_name -> pb.Source
	18, // 3: cores.PullSourceResponse.source:type_name -> pb.Source
	17, // 4: cores.ListTagRequest.page:type_name -> pb.Page
	17, // 5: cores.ListTagResponse.page:type_name -> pb.Page
	19, // 6: cores.ListTagResponse.tag:type_name -> pb.Tag
	19, // 7: cores.PullTagResponse.tag:type_name -> pb.Tag
	20, // 8: cores.PullTagValueResponse.tag:type_name -> pb.TagValueUpdated
	18, // 9: cores.SourceService.Create:input_type -> pb.Source
	18, // 10: cores.SourceService.Update:input_type -> pb.Source
	21, // 11: cores.SourceService.View:input_type -> pb.Id
	2,  // 12: cores.SourceService.ViewByName:input_type -> cores.ViewSourceByNameRequest
	22, // 13: cores.SourceService.ViewByNameFull:input_type -> pb.Name
	21, // 14: cores.SourceService.Delete:input_type -> pb.Id
	0,  // 15: cores.SourceService.List:input_type -> cores.ListSourceRequest
	3,  // 16: cores.SourceService.Link:input_type -> cores.LinkSourceRequest
	4,  // 17: cores.SourceService.Clone:input_type -> cores.CloneSourceRequest
	21, // 18: cores.SourceService.ViewWithDeleted:input_type -> pb.Id
	5,  // 19: cores.SourceService.Pull:input_type -> cores.PullSourceRequest
	19, // 20: cores.TagService.Create:input_type -> pb.Tag
	19, // 21: cores.TagService.Update:input_type -> pb.Tag
	21, // 22: cores.TagService.View:input_type -> pb.Id
	9,  // 23: cores.TagService.ViewByName:input_type -> cores.ViewTagByNameRequest
	22, // 24: cores.TagService.ViewByNameFull:input_type -> pb.Name
	21, // 25: cores.TagService.Delete:input_type -> pb.Id
	7,  // 26: cores.TagService.List:input_type -> cores.ListTagRequest
	10, // 27: cores.TagService.Clone:input_type -> cores.CloneTagRequest
	21, // 28: cores.TagService.GetValue:input_type -> pb.Id
	23, // 29: cores.TagService.SetValue:input_type -> pb.TagValue
	23, // 30: cores.TagService.SyncValue:input_type -> pb.TagValue
	23, // 31: cores.TagService.SetValueUnchecked:input_type -> pb.TagValue
	11, // 32: cores.TagService.GetValueByName:input_type -> cores.GetTagValueByNameRequest
	12, // 33: cores.TagService.SetValueByName:input_type -> cores.TagNameValue
	12, // 34: cores.TagService.SetValueByNameUnchecked:input_type -> cores.TagNameValue
	21, // 35: cores.TagService.ViewWithDeleted:input_type -> pb.Id
	13, // 36: cores.TagService.Pull:input_type -> cores.PullTagRequest
	21, // 37: cores.TagService.ViewValue:input_type -> pb.Id
	21, // 38: cores.TagService.DeleteValue:input_type -> pb.Id
	15, // 39: cores.TagService.PullValue:input_type -> cores.PullTagValueRequest
	18, // 40: cores.SourceService.Create:output_type -> pb.Source
	18, // 41: cores.SourceService.Update:output_type -> pb.Source
	18, // 42: cores.SourceService.View:output_type -> pb.Source
	18, // 43: cores.SourceService.ViewByName:output_type -> pb.Source
	18, // 44: cores.SourceService.ViewByNameFull:output_type -> pb.Source
	24, // 45: cores.SourceService.Delete:output_type -> pb.MyBool
	1,  // 46: cores.SourceService.List:output_type -> cores.ListSourceResponse
	24, // 47: cores.SourceService.Link:output_type -> pb.MyBool
	24, // 48: cores.SourceService.Clone:output_type -> pb.MyBool
	18, // 49: cores.SourceService.ViewWithDeleted:output_type -> pb.Source
	6,  // 50: cores.SourceService.Pull:output_type -> cores.PullSourceResponse
	19, // 51: cores.TagService.Create:output_type -> pb.Tag
	19, // 52: cores.TagService.Update:output_type -> pb.Tag
	19, // 53: cores.TagService.View:output_type -> pb.Tag
	19, // 54: cores.TagService.ViewByName:output_type -> pb.Tag
	19, // 55: cores.TagService.ViewByNameFull:output_type -> pb.Tag
	24, // 56: cores.TagService.Delete:output_type -> pb.MyBool
	8,  // 57: cores.TagService.List:output_type -> cores.ListTagResponse
	24, // 58: cores.TagService.Clone:output_type -> pb.MyBool
	23, // 59: cores.TagService.GetValue:output_type -> pb.TagValue
	24, // 60: cores.TagService.SetValue:output_type -> pb.MyBool
	24, // 61: cores.TagService.SyncValue:output_type -> pb.MyBool
	24, // 62: cores.TagService.SetValueUnchecked:output_type -> pb.MyBool
	12, // 63: cores.TagService.GetValueByName:output_type -> cores.TagNameValue
	24, // 64: cores.TagService.SetValueByName:output_type -> pb.MyBool
	24, // 65: cores.TagService.SetValueByNameUnchecked:output_type -> pb.MyBool
	19, // 66: cores.TagService.ViewWithDeleted:output_type -> pb.Tag
	14, // 67: cores.TagService.Pull:output_type -> cores.PullTagResponse
	20, // 68: cores.TagService.ViewValue:output_type -> pb.TagValueUpdated
	24, // 69: cores.TagService.DeleteValue:output_type -> pb.MyBool
	16, // 70: cores.TagService.PullValue:output_type -> cores.PullTagValueResponse
	40, // [40:71] is the sub-list for method output_type
	9,  // [9:40] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_cores_source_service_proto_init() }
func file_cores_source_service_proto_init() {
	if File_cores_source_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cores_source_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewSourceByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloneSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewTagByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloneTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTagValueByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagNameValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullTagValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cores_source_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullTagValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cores_source_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_cores_source_service_proto_goTypes,
		DependencyIndexes: file_cores_source_service_proto_depIdxs,
		MessageInfos:      file_cores_source_service_proto_msgTypes,
	}.Build()
	File_cores_source_service_proto = out.File
	file_cores_source_service_proto_rawDesc = nil
	file_cores_source_service_proto_goTypes = nil
	file_cores_source_service_proto_depIdxs = nil
}
