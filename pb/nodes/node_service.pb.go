// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.21.12
// source: nodes/node_service.proto

package nodes

import (
	pb "github.com/snple/beacon/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeLoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Secret        string                 `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeLoginRequest) Reset() {
	*x = NodeLoginRequest{}
	mi := &file_nodes_node_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeLoginRequest) ProtoMessage() {}

func (x *NodeLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodes_node_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeLoginRequest.ProtoReflect.Descriptor instead.
func (*NodeLoginRequest) Descriptor() ([]byte, []int) {
	return file_nodes_node_service_proto_rawDescGZIP(), []int{0}
}

func (x *NodeLoginRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NodeLoginRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeLoginRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type NodeLoginReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *pb.Node               `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeLoginReply) Reset() {
	*x = NodeLoginReply{}
	mi := &file_nodes_node_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeLoginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeLoginReply) ProtoMessage() {}

func (x *NodeLoginReply) ProtoReflect() protoreflect.Message {
	mi := &file_nodes_node_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeLoginReply.ProtoReflect.Descriptor instead.
func (*NodeLoginReply) Descriptor() ([]byte, []int) {
	return file_nodes_node_service_proto_rawDescGZIP(), []int{1}
}

func (x *NodeLoginReply) GetNode() *pb.Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *NodeLoginReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type NodeLinkRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// string id = 1;
	Status        int32 `protobuf:"zigzag32,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeLinkRequest) Reset() {
	*x = NodeLinkRequest{}
	mi := &file_nodes_node_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeLinkRequest) ProtoMessage() {}

func (x *NodeLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodes_node_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeLinkRequest.ProtoReflect.Descriptor instead.
func (*NodeLinkRequest) Descriptor() ([]byte, []int) {
	return file_nodes_node_service_proto_rawDescGZIP(), []int{2}
}

func (x *NodeLinkRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type NodeKeepAliveReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Time          int32                  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeKeepAliveReply) Reset() {
	*x = NodeKeepAliveReply{}
	mi := &file_nodes_node_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeKeepAliveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeKeepAliveReply) ProtoMessage() {}

func (x *NodeKeepAliveReply) ProtoReflect() protoreflect.Message {
	mi := &file_nodes_node_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeKeepAliveReply.ProtoReflect.Descriptor instead.
func (*NodeKeepAliveReply) Descriptor() ([]byte, []int) {
	return file_nodes_node_service_proto_rawDescGZIP(), []int{3}
}

func (x *NodeKeepAliveReply) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

var File_nodes_node_service_proto protoreflect.FileDescriptor

var file_nodes_node_service_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x1a, 0x12, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4e, 0x0a, 0x10,
	0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x44, 0x0a, 0x0e,
	0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c,
	0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70,
	0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x29, 0x0a, 0x0f, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x28, 0x0a,
	0x12, 0x4e, 0x6f, 0x64, 0x65, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x32, 0xbc, 0x02, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x17, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x1e, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x08, 0x2e, 0x70,
	0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x22, 0x00, 0x12, 0x1f, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x0b, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x79, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22,
	0x00, 0x12, 0x2a, 0x0a, 0x0f, 0x56, 0x69, 0x65, 0x77, 0x57, 0x69, 0x74, 0x68, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x12, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0x00, 0x12, 0x1e, 0x0a,
	0x04, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x1a,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x79, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x12, 0x37, 0x0a,
	0x09, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x0b, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x79, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6e, 0x70, 0x6c, 0x65, 0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f,
	0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x3b, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nodes_node_service_proto_rawDescOnce sync.Once
	file_nodes_node_service_proto_rawDescData = file_nodes_node_service_proto_rawDesc
)

func file_nodes_node_service_proto_rawDescGZIP() []byte {
	file_nodes_node_service_proto_rawDescOnce.Do(func() {
		file_nodes_node_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_nodes_node_service_proto_rawDescData)
	})
	return file_nodes_node_service_proto_rawDescData
}

var file_nodes_node_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_nodes_node_service_proto_goTypes = []any{
	(*NodeLoginRequest)(nil),   // 0: nodes.NodeLoginRequest
	(*NodeLoginReply)(nil),     // 1: nodes.NodeLoginReply
	(*NodeLinkRequest)(nil),    // 2: nodes.NodeLinkRequest
	(*NodeKeepAliveReply)(nil), // 3: nodes.NodeKeepAliveReply
	(*pb.Node)(nil),            // 4: pb.Node
	(*pb.MyEmpty)(nil),         // 5: pb.MyEmpty
	(*pb.MyBool)(nil),          // 6: pb.MyBool
}
var file_nodes_node_service_proto_depIdxs = []int32{
	4, // 0: nodes.NodeLoginReply.node:type_name -> pb.Node
	0, // 1: nodes.NodeService.Login:input_type -> nodes.NodeLoginRequest
	4, // 2: nodes.NodeService.Update:input_type -> pb.Node
	5, // 3: nodes.NodeService.View:input_type -> pb.MyEmpty
	2, // 4: nodes.NodeService.Link:input_type -> nodes.NodeLinkRequest
	5, // 5: nodes.NodeService.ViewWithDeleted:input_type -> pb.MyEmpty
	4, // 6: nodes.NodeService.Sync:input_type -> pb.Node
	5, // 7: nodes.NodeService.KeepAlive:input_type -> pb.MyEmpty
	1, // 8: nodes.NodeService.Login:output_type -> nodes.NodeLoginReply
	4, // 9: nodes.NodeService.Update:output_type -> pb.Node
	4, // 10: nodes.NodeService.View:output_type -> pb.Node
	6, // 11: nodes.NodeService.Link:output_type -> pb.MyBool
	4, // 12: nodes.NodeService.ViewWithDeleted:output_type -> pb.Node
	6, // 13: nodes.NodeService.Sync:output_type -> pb.MyBool
	3, // 14: nodes.NodeService.KeepAlive:output_type -> nodes.NodeKeepAliveReply
	8, // [8:15] is the sub-list for method output_type
	1, // [1:8] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_nodes_node_service_proto_init() }
func file_nodes_node_service_proto_init() {
	if File_nodes_node_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nodes_node_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nodes_node_service_proto_goTypes,
		DependencyIndexes: file_nodes_node_service_proto_depIdxs,
		MessageInfos:      file_nodes_node_service_proto_msgTypes,
	}.Build()
	File_nodes_node_service_proto = out.File
	file_nodes_node_service_proto_rawDesc = nil
	file_nodes_node_service_proto_goTypes = nil
	file_nodes_node_service_proto_depIdxs = nil
}
